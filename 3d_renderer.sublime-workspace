{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"matrix",
				"matrix_translation"
			],
			[
				"rot",
				"rot_matrix"
			],
			[
				"rota",
				"rotateXMatrix"
			],
			[
				"drone_",
				"drone_up"
			],
			[
				"decrease",
				"decrease_altitude"
			],
			[
				"trans",
				"translate_drone"
			],
			[
				"drone",
				"drone_wf"
			],
			[
				"translate",
				"translateAll"
			],
			[
				"cente",
				"center_point"
			],
			[
				"wire",
				"wireframes"
			],
			[
				"cre",
				"create_wireframe"
			],
			[
				"OBJ",
				"OBJ_loader"
			],
			[
				"X",
				"X"
			],
			[
				"tra",
				"translate_Camera"
			],
			[
				"mov",
				"movCamera"
			],
			[
				"move",
				"moveCameraY"
			],
			[
				"screen",
				"screenWidth"
			],
			[
				"add",
				"addPerspective"
			],
			[
				"ed",
				"edgeList"
			],
			[
				"ones",
				"ones_column"
			],
			[
				"i",
				"i"
			],
			[
				"wir",
				"wireframe"
			],
			[
				"mean",
				"meanZ"
			],
			[
				"transl",
				"translateAll"
			],
			[
				"key",
				"key_to_function"
			],
			[
				"centre",
				"centre_y"
			],
			[
				"write",
				"writerow"
			],
			[
				"num",
				"num4"
			],
			[
				"user",
				"user_username"
			],
			[
				"on",
				"Once_only_flag"
			],
			[
				"up",
				"upwind_waypoint2"
			],
			[
				"upw",
				"upwind_waypoint"
			],
			[
				"wa",
				"upwind_waypoint1"
			],
			[
				"var",
				"var_x1"
			],
			[
				"upwind",
				"upwind_waypoint1"
			],
			[
				"ac",
				"activated_waypoint"
			],
			[
				"heading",
				"heading_upwind"
			],
			[
				"stee",
				"steer_towards_WP"
			],
			[
				"upwin",
				"upwind_waypoint"
			],
			[
				"way",
				"waypoint"
			],
			[
				"va",
				"var_x1"
			],
			[
				"grad_boat",
				"grad_boat_2"
			],
			[
				"grad",
				"grad_boat_1"
			],
			[
				"boat",
				"boat_c1"
			],
			[
				"pos",
				"pos3A_X"
			],
			[
				"pos3",
				"pos3A_Y"
			],
			[
				"pos2B",
				"pos2B_Y"
			],
			[
				"activated",
				"activated_waypoint"
			],
			[
				"tide",
				"tide_x"
			],
			[
				"sail",
				"sailboats"
			],
			[
				"e",
				"e"
			],
			[
				"head",
				"heading_upwind"
			],
			[
				"let",
				"let_sail_out"
			],
			[
				"wind",
				"winddirection"
			],
			[
				"x",
				"x"
			],
			[
				"re",
				"reached_waypoint"
			],
			[
				"activ",
				"activated_waypoint"
			],
			[
				"aci",
				"activated_waypoint"
			],
			[
				"draw",
				"draw_course"
			],
			[
				"course",
				"course1"
			],
			[
				"pygame",
				"pygame_instance"
			],
			[
				"py",
				"pygame_instance"
			],
			[
				"max",
				"max_iter"
			],
			[
				"numbe",
				"number_of_runs"
			],
			[
				"step",
				"step_size"
			],
			[
				"a",
				"average"
			],
			[
				"time",
				"time_spent"
			],
			[
				"ani",
				"animate"
			],
			[
				"anima",
				"animation"
			],
			[
				"Func",
				"FuncAnimation"
			],
			[
				"plot",
				"plot_update"
			],
			[
				"connect",
				"connect_button"
			],
			[
				"con",
				"connect"
			],
			[
				"connec",
				"connection_status"
			],
			[
				"data",
				"data_view"
			],
			[
				"b",
				"b"
			],
			[
				"n",
				"n_elements"
			],
			[
				"z",
				"z"
			],
			[
				"fout",
				"foutput"
			],
			[
				"temp",
				"temp2"
			],
			[
				"is",
				"isquared"
			],
			[
				"sin",
				"sin_mult"
			],
			[
				"vi",
				"vi_i_j_minus"
			],
			[
				"vi_",
				"vi_i_minus_j"
			],
			[
				"vr",
				"vr_var"
			],
			[
				"SDL_",
				"SDL_WINDOWID"
			],
			[
				"your",
				"your_heading"
			],
			[
				"font",
				"font_family"
			],
			[
				"person",
				"person_count"
			],
			[
				"Nth",
				"Nth_Order_functor"
			],
			[
				"ta",
				"target_vessel_true_speed"
			],
			[
				"true",
				"true_course"
			],
			[
				"tur",
				"true_course"
			],
			[
				"targ",
				"target_vessel_true_course"
			],
			[
				"min",
				"min_dist"
			],
			[
				"y",
				"y_var"
			],
			[
				"_",
				"_pygame_class"
			],
			[
				"Y",
				"y_comp"
			],
			[
				"text",
				"textRect"
			],
			[
				"te",
				"textRect"
			],
			[
				"new",
				"new_array"
			],
			[
				"dis",
				"distance_between"
			],
			[
				"get",
				"get_title"
			],
			[
				"Dic",
				"DictReader"
			],
			[
				"csv",
				"csv_reader"
			],
			[
				"birt",
				"birth_date"
			],
			[
				"rema",
				"remaining_guesses"
			],
			[
				"next",
				"next_btn"
			],
			[
				"arct",
				"article"
			],
			[
				"ar",
				"articles"
			],
			[
				"find",
				"find_next_sibling"
			],
			[
				"opp",
				"oppisite_value"
			],
			[
				"op",
				"oppisite_value"
			],
			[
				"clash",
				"clashes"
			],
			[
				"mini",
				"minimum_oppisite"
			],
			[
				"cur",
				"curr_count"
			],
			[
				"oppis",
				"oppisite"
			],
			[
				"oppi",
				"oppisite_value"
			],
			[
				"cal",
				"calculate_speed"
			],
			[
				"al",
				"alter_wind"
			],
			[
				"me",
				"mega_man"
			],
			[
				"test",
				"test_say_name"
			],
			[
				"assert",
				"assertFalse"
			],
			[
				"eat",
				"eat_junk"
			],
			[
				"be",
				"be_polite"
			],
			[
				"current",
				"current_beat"
			],
			[
				"cou",
				"count_up_to"
			],
			[
				"it",
				"iterator"
			]
		]
	},
	"buffers":
	[
		{
			"file": "projectionViewer.py",
			"settings":
			{
				"buffer_size": 9440,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "__main__.py",
			"settings":
			{
				"buffer_size": 2147,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh_floor.py",
			"settings":
			{
				"buffer_size": 297,
				"line_ending": "Unix"
			}
		},
		{
			"file": "wireframe.py",
			"settings":
			{
				"buffer_size": 3764,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "camera.py",
			"settings":
			{
				"buffer_size": 1102,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Drone.py",
			"settings":
			{
				"buffer_size": 3756,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "'''"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/C#.sublime-build",
					""
				],
				[
					"Packages/User/C#.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/C#.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"convert inder",
				"Indentation: Convert to Spaces"
			],
			[
				"Subl",
				"Preferences: SublimeGDB Settings â€“ User"
			],
			[
				"Sublime",
				"SublimeGDB: Start Debugging"
			],
			[
				"Install ",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Lorem ipsum"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/matthaywood/Desktop/3D Drone Simulator/test.obj",
		"/Users/matthaywood/Desktop/3D Drone Simulator/obj_loader.py",
		"/Users/matthaywood/Desktop/3D Graphics Renderer/projectionViewer.py",
		"/Users/matthaywood/Desktop/3D Graphics Renderer/wireframe.py",
		"/Users/matthaywood/Desktop/3D Graphics Renderer/__main__.py",
		"/Users/matthaywood/Desktop/3D Graphics Renderer/main.py",
		"/Users/matthaywood/Desktop/economic_sim.py",
		"/Users/matthaywood/Desktop/economic_sim",
		"/Users/matthaywood/Desktop/Receive-Side-Server/NodeServer/test.py",
		"/Users/matthaywood/Desktop/Receive-Side-Server/NodeServer/material-dashboard-dark-edition-v2.1.0/template.html",
		"/Users/matthaywood/Desktop/Team_project_dissertation_webpage .html",
		"/Users/matthaywood/Downloads/Lab4ex2.cpp",
		"/Users/matthaywood/Desktop/University Submitted Coursework/Year 1/Computer Aided Engineering/HandsOnLearning/Week 3/lab3ex1.c",
		"/Users/matthaywood/Downloads/Software CW3/OpticalRoughnessApplication/src/opticalroughnessapplication/OpticalRoughnessApplicationFXMLController.java",
		"/Users/matthaywood/Downloads/TelemetryDesktopViewerFXMLController.java",
		"/Users/matthaywood/Desktop/Receive-Side-Server/ComputerGUI/tkinter_test.py",
		"/Users/matthaywood/Desktop/haywoods_propertiesv2/public/script.js",
		"/Users/matthaywood/Desktop/auto-login/yotspot-auto-login.py",
		"/Users/matthaywood/Desktop/auto-login/auto-login.py",
		"/Users/matthaywood/Downloads/complete_sendy_version/h63eee/H63eeeDrawingApp/src/h63eeedrawingapp/DrawingAppGUIController.java",
		"/Users/matthaywood/Desktop/sailing_sim/sailing_sim/README.md",
		"/Users/matthaywood/Desktop/Amazon revision/Binary_Search.cpp",
		"/Users/matthaywood/Downloads/ToBeOptimisedCode.cpp",
		"/Users/matthaywood/Downloads/optimization/Part1/ToBeOptimisedCodeCommented.cpp",
		"/Users/matthaywood/Downloads/optimization/Part1/optimization2.cpp",
		"/Users/matthaywood/Downloads/optimization-3/Part1/optimization2.cpp",
		"/Users/matthaywood/Downloads/optimization-2/Part1/optimization2.cpp",
		"/Users/matthaywood/Downloads/optimization-2/Part1/ToBeOptimisedCodeCommented.cpp",
		"/Users/matthaywood/Desktop/simulation/Molecule.py",
		"/Users/matthaywood/Desktop/poker/PokerV2/PokerV2.cpp",
		"/Users/matthaywood/Desktop/poker/PokerV2/Game/poker_game_class.hpp",
		"/Users/matthaywood/Desktop/poker/PokerV2/Table/table_class.hpp",
		"/Users/matthaywood/Desktop/test.py",
		"/Users/matthaywood/Desktop/sailing_sim/sailing_sim/vessel.py",
		"/Users/matthaywood/Desktop/sailing_sim/sailing_sim/course.py",
		"/Users/matthaywood/Desktop/sailing_sim/sailing_sim/sailing.py",
		"/Users/matthaywood/Downloads/Deployment-Sendgrid.sendgrid_azure_1606145583733/deployment_operations.json",
		"/Users/matthaywood/Desktop/Perfect-Pooches-Logo .svg",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1/Exercise4/ex4.hpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1/Exercise4/ex4.cpp",
		"/Users/matthaywood/Desktop/optimization/Part1/optimization2.cpp",
		"/Users/matthaywood/Desktop/optimization/Part2/part2dynamicscheduling.cpp",
		"/Users/matthaywood/Desktop/optimization/Part2/part2parallelized.cpp",
		"/Users/matthaywood/Desktop/optimization/Part2/part2.cpp",
		"/Users/matthaywood/Desktop/optimization/part2.cpp",
		"/Users/matthaywood/Desktop/optimization/optimization2.cpp",
		"/Users/matthaywood/Downloads/ToBeOptimisedCode-2.cpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1-2/Exercise1/ex1.hpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1-2/Exercise1/ex1.cpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1-2/Exercise4/ex4.hpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1-2/Exercise4/ex4.cpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1/Exercise3/ex3.hpp",
		"/Users/matthaywood/Downloads/Scalable cross platform CW1/Exercise3/ex3.cpp",
		"/Users/matthaywood/Desktop/optimization/part2parallelized.cpp",
		"/Users/matthaywood/Desktop/Receive-Side-Server/README.md",
		"/Users/matthaywood/Desktop/Receive-Side-Server/ComputerGUI/README.md",
		"/Users/matthaywood/Desktop/optimization/ToBeOptimisedCodeCommented.cpp",
		"/Users/matthaywood/Desktop/optimization/optimization4.cpp",
		"/Users/matthaywood/Desktop/optimization/optimization3.cpp",
		"/Users/matthaywood/Desktop/optimization/optimisationcw.cpp",
		"/Users/matthaywood/Library/Application Support/Sublime Text 3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/Users/matthaywood/Library/Application Support/Sublime Text 3/Packages/User/SublimeGDB.sublime-settings",
		"/Users/matthaywood/Desktop/test.cpp",
		"/Users/matthaywood/Desktop/ARPA/radar.py",
		"/Users/matthaywood/Desktop/ARPA/RADAR_plotter.py",
		"/Users/matthaywood/Desktop/test2.py",
		"/Users/matthaywood/Desktop/tkinter_test.py",
		"/Users/matthaywood/Desktop/Receive-Side-Server/test.py",
		"/Users/matthaywood/Desktop/ARPA/dist/radar/plots.csv",
		"/Users/matthaywood/Desktop/poker/PokerV2/PokerV2/PokerV2.cpp",
		"/Users/matthaywood/Desktop/poker/PokerV2/PokerV2/PokerV2.sublime-workspace",
		"/Users/matthaywood/Downloads/Generic_programming_lab_work#2_solutions.cpp",
		"/Users/matthaywood/Desktop/Scalable-Cross-Platform/Week 2 - Generic Programming/Ex2.cpp",
		"/Users/matthaywood/Desktop/Scalable-Cross-Platform/Week 2 - Generic Programming/Ex1.cpp",
		"/Users/matthaywood/Desktop/ARPA/README.md",
		"/Users/matthaywood/Desktop/ARPA/plots.csv",
		"/Users/matthaywood/Desktop/ARPA/plots3.csv",
		"/Users/matthaywood/Desktop/ARPA/plots2.csv",
		"/Users/matthaywood/Desktop/radar.py",
		"/Users/matthaywood/Desktop/RADAR_plotter.py",
		"/Users/matthaywood/Downloads/uon-fs-MEngDemo_gcc-2/uon-fs-networkmonitor/data_KIST.h",
		"/Users/matthaywood/Downloads/uon-fs-MEngDemo_gcc-2/uon-fs-networkmonitor/data_INV.h",
		"/Users/matthaywood/Downloads/uon-fs-MEngDemo_gcc-2/uon-fs-networkmonitor/data_CTRL.h",
		"/Users/matthaywood/Downloads/uon-fs-MEngDemo_gcc-2/uon-fs-networkmonitor/data_AMS.h",
		"/Users/matthaywood/Desktop/Scalable-Cross-Platform/Week 1 - Generic Programming/Ex5.cpp",
		"/Users/matthaywood/Desktop/Scalable-Cross-Platform/Week 1 - Generic Programming/Ex4.cpp",
		"/Users/matthaywood/Desktop/Scalable-Cross-Platform/Week 1 - Generic Programming/Ex1.cpp",
		"/Users/matthaywood/Desktop/Scalable-Cross-Platform/Week 1 - Generic Programming/Ex3.cpp",
		"/Users/matthaywood/Desktop/Week 1 - Generic Programming/Ex1.cpp",
		"/Users/matthaywood/Desktop/openMPInstallTest.cpp",
		"/Users/matthaywood/Desktop/Week 1 - Generic Programming/Ex2.cpp",
		"/Users/matthaywood/Desktop/Week 1 - Generic Programming/Ex3.cpp",
		"/Users/matthaywood/Desktop/test.html",
		"/Users/matthaywood/Desktop/highcharts.html",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/08-SQL-Injection.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/02-Inserting-SQL.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/03-Selecting.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/04-Connecting-Python-To-A-DB.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/05-Inserting-with-Python.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/06-Bulk-Inserts.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/29-Python-and-SQL/07-Selecting-with-Python.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/10-Substitution-Basics.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/09-Regex-Compilation-Flags.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/08-Parsing-URLS-with-Python.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/07-Validating-Phone-Numbers.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/02-Quantifiers.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/03-Classes-and-Sets.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/04-Anchors-and-Boundaries.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/05-Logical-Or-and-Capture-Groups.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/28-Regular-Expressions/06-Using-RE-Module.py",
		"/Users/matthaywood/opt/anaconda3/pkgs/appscript-1.1.0-py37h1de35cc_0/lib/python3.7/site-packages/aeosa/aem/findapp.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/blog_data.csv",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/01-Parsing-Navigating-HTML.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/02-Accessing-Data.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/03-Navigating-with-BS4.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/04-First-Scraping-Program.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/2",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/26-Web-Scraping-Beautiful-Soup/02-Selecting.py",
		"/Users/matthaywood/Desktop/Udemy-Modern-Python-3-Bootcamp/25-Working-With-CSV-and-Pickling/05-Extra-Fancy-JSON-Pickling.py",
		"/Users/matthaywood/Desktop/footwearable/wearable-my-foot/android/gradle/wrapper/gradle-wrapper.properties",
		"/Users/matthaywood/Desktop/diceproblem/Program.cs",
		"/Users/matthaywood/Desktop/cube_exercise_mod.cpp",
		"/Users/matthaywood/Desktop/cube_exercise.cpp",
		"/Users/matthaywood/Desktop/test2.cpp",
		"/Users/matthaywood/Desktop/cube_exercise.CS",
		"/Users/matthaywood/Library/Application Support/Sublime Text 3/Packages/User/C#.sublime-build",
		"/Users/matthaywood/Desktop/fib.cpp",
		"/Users/matthaywood/Desktop/projection/house_projection/house_projection.py"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"print(center_point.nodes[0])",
			"from wireframe import *\nimport pygame\nimport numpy as np\n\nclass ProjectionViewer:\n\n\t''' Displays 3D Objects on a Pygame Screen '''\n\n\tdef __init__(self, width, height):\n\t\tself.width = width\n\t\tself.height = height\n\t\tself.screen = pygame.display.set_mode((width, height))\n\t\tpygame.display.set_caption('Wireframe Display')\n\t\tself.background = (10,10,50)\n\n\n\t\tself.wireframes = {}\n\t\tself.displayNodes = True\n\t\tself.displayEdges = True\n\t\tself.nodeColour = (255,255,255)\n\t\tself.edgeColour = (200,200,200)\n\t\tself.nodeRadius = 4\n\n\tdef run(self):\n\n\t\tkey_to_function = {\n\t\tpygame.K_LEFT: (lambda x: x.translateAll([-10, 0, 0])),\n \t\tpygame.K_RIGHT:(lambda x: x.translateAll([ 10, 0, 0])),\n \t\tpygame.K_DOWN: (lambda x: x.translateAll([0,  10, 0])),\n \t\tpygame.K_UP:   (lambda x: x.translateAll([0, -10, 0])),\n\n \t\t# pygame.K_LEFT: (lambda x: x.moveCameraX(0,0.005)),\n \t\t# pygame.K_RIGHT:(lambda x: x.moveCameraX(0,-0.005)),\n \t\t# pygame.K_DOWN: (lambda x: x.moveCameraX(0.005,0)),\n \t\t# pygame.K_UP:   (lambda x: x.moveCameraX(-0.005,0)),\n\n \t\tpygame.K_s: (lambda x: x.rotateAll('Y', -0.1)),\n\n\t\tpygame.K_EQUALS: (lambda x: x.scaleAll([1.25,1.25,1.25])),\n\t\tpygame.K_MINUS: (lambda x: x.scaleAll([0.8,0.8,0.8])),\n\n\t\tpygame.K_q: (lambda x: x.rotateAll('X', 0.1)),\n\t\tpygame.K_w: (lambda x: x.rotateAll('X', -0.1)),\n\t\t# pygame.K_a: (lambda x: x.rotateAll('Y', 0.1)),\n\t\tpygame.K_s: (lambda x: x.rotateAll('Y', -0.1)),\n\t\tpygame.K_z: (lambda x: x.rotateAll('Z', 0.1)),\n\t\tpygame.K_x: (lambda x: x.rotateAll('Z', -0.1)),\n\t\tpygame.K_p: (lambda x: x.perspectiveMode()),\n\t\tpygame.K_t: (lambda x: x.translate_Camera())\n\t\t\n\t\t}\n\n\n\t\trunning = True\n\t\tflag = False\n\n\t\twhile running:\n\n\t\t\tkeys = pygame.key.get_pressed()\n\n\t\t\tfor event in pygame.event.get():\n\t\t\t\tif event.type == pygame.QUIT:\n\t\t\t\t\trunning = False\n\n\t\t\t\t\n\t\t\t\t\n\t\t\tif keys[pygame.K_LEFT]:\n\t\t\t\tkey_to_function[pygame.K_LEFT](self)\n\t\t\tif keys[pygame.K_RIGHT]:\n\t\t\t\tkey_to_function[pygame.K_RIGHT](self)\n\t\t\tif keys[pygame.K_DOWN]:\n\t\t\t\tkey_to_function[pygame.K_DOWN](self)\n\t\t\tif keys[pygame.K_UP]:\n\t\t\t\tkey_to_function[pygame.K_UP](self)\n\t\t\tif keys[pygame.K_EQUALS]:\n\t\t\t\tkey_to_function[pygame.K_EQUALS](self)\n\t\t\tif keys[pygame.K_MINUS]:\n\t\t\t\tkey_to_function[pygame.K_MINUS](self)\n\t\t\tif keys[pygame.K_LEFT]:\n\t\t\t\tkey_to_function[pygame.K_LEFT](self)\n\t\t\tif keys[pygame.K_q]:\n\t\t\t\tkey_to_function[pygame.K_q](self)\n\t\t\tif keys[pygame.K_w]:\n\t\t\t\tkey_to_function[pygame.K_w](self)\n\t\t\tif keys[pygame.K_a]:\n\t\t\t\tkey_to_function[pygame.K_a](self)\n\t\t\tif keys[pygame.K_s]:\n\t\t\t\tkey_to_function[pygame.K_s](self)\n\t\t\tif keys[pygame.K_z]:\n\t\t\t\tkey_to_function[pygame.K_z](self)\n\t\t\tif keys[pygame.K_x]:\n\t\t\t\tkey_to_function[pygame.K_x](self)\n\t\t\tif keys[pygame.K_p]:\n\t\t\t\tkey_to_function[pygame.K_p](self)\n\t\t\tif keys[pygame.K_t]:\n\t\t\t\tkey_to_function[pygame.K_t](self)\n\n\t\t\tself.display()\n\t\t\tpygame.display.flip()\n\n\tdef addWireframe(self, name, wireframe):\n\t\tself.wireframes[name] = wireframe\n\n\tdef display(self):\n\n\t\tself.screen.fill(self.background)\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\tif self.displayEdges:\n\t\t\t\tfor n1, n2 in wireframe.edges:\n\t\t\t\t\tpygame.draw.aaline(self.screen, self.edgeColour, wireframe.nodes[n1][:2], wireframe.nodes[n2][:2],1)\n\n\t\t\t\t\tif self.displayNodes:\n\t\t\t\t\t\tfor node in wireframe.nodes:\n\n\t\t\t\t\t\t\tpygame.draw.circle(self.screen, self.nodeColour, (int(node[0]), int(node[1])), self.nodeRadius, 0)\n\n\n\tdef translateAll(self, vector):\n\t\t''' Translate all wireframes along a given axis by d units '''\n\t\twf = Wireframe()\n\t\tmatrix = wf.translationMatrix(*vector)\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\tdef scaleAll(self, vector):\n\t\twf = Wireframe()\n\t\tmatrix = wf.scaleMatrix(*vector)\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\tdef rotateAll(self, axis, theta):\n\n\t\twf = Wireframe()\n\t\tif axis == 'X':\n\t\t\tmatrix = wf.rotateXMatrix(theta)\n\t\telif axis == 'Y':\n\t\t\tmatrix = wf.rotateYMatrix(theta)\n\t\telif axis == 'Z':\n\t\t\tmatrix = wf.rotateZMatrix(theta)\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\tdef moveCameraX(self,x,y):\n\n\t\twf = Wireframe()\n\n\t\tmatrix = wf.movCamera(x,y)\n\t\tprint(\"test\")\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\tdef moveCameraZ(self,x,y):\n\n\t\twf = Wireframe()\n\n\t\tmatrix = wf.testMat((0,0,val))\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\tdef perspectiveMode():\n\n\t\tpass\n\n\tdef rotate_about_Center(self, Axis, theta):\n\n\t\t#First translate Centre of screen to 0,0\n\n\t\twf = Wireframe()\n\t\tmatrix = wf.translationMatrix(-width/2,-height/2,0)\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\t\t#Do Rotation\n\t\twf = Wireframe()\n\t\tif axis == 'X':\n\t\t\tmatrix = wf.rotateXMatrix(theta)\n\t\telif axis == 'Y':\n\t\t\tmatrix = wf.rotateYMatrix(theta)\n\t\telif axis == 'Z':\n\t\t\tmatrix = wf.rotateZMatrix(theta)\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\t\t#Translate back to centre of screen\n\n\t\twf = Wireframe()\n\t\tmatrix = wf.translationMatrix(width/2,height/2,0)\n\n\t\tfor wireframe in self.wireframes.values():\n\t\t\twireframe.transform(matrix)\n\n\n\n\n\n\n\n\n\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "projectionViewer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9440,
						"regions":
						{
						},
						"selection":
						[
							[
								8920,
								8920
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7028.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "__main__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2147,
						"regions":
						{
						},
						"selection":
						[
							[
								2093,
								2093
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 854.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "mesh_floor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 297,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "wireframe.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3764,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "camera.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1102,
						"regions":
						{
						},
						"selection":
						[
							[
								412,
								412
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 287.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Drone.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3756,
						"regions":
						{
						},
						"selection":
						[
							[
								630,
								630
							]
						],
						"settings":
						{
							"auto_name": "'''",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 488.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 107.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Python3.sublime-build",
	"project": "3d_renderer.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 234.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
